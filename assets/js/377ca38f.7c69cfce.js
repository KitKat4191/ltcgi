"use strict";(self.webpackChunkltcgi=self.webpackChunkltcgi||[]).push([[37],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=c(r),d=i,m=f["".concat(p,".").concat(d)]||f[d]||u[d]||o;return r?n.createElement(m,a(a({ref:t},s),{},{components:r})):n.createElement(m,a({ref:t},s))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3766:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const o={id:"Intro",slug:"/",sidebar_position:1},a="About LTCGI",l={unversionedId:"Intro",id:"Intro",title:"About LTCGI",description:"Optimized plug-and-play realtime area lighting using the linearly transformed cosine algorithm for Unity/VRChat. Free to use with attribution.",source:"@site/docs/Intro.md",sourceDirName:".",slug:"/",permalink:"/ltcgi/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"Intro",slug:"/",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Installing LTCGI",permalink:"/ltcgi/Getting Started/Installation"}},p={},c=[],s={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"about-ltcgi"},"About LTCGI"),(0,i.kt)("p",null,"Optimized plug-and-play realtime area lighting using the ",(0,i.kt)("a",{parentName:"p",href:"#LTC"},"linearly transformed cosine algorithm")," for Unity/VRChat. Free to use with ",(0,i.kt)("a",{parentName:"p",href:"#Attribution"},"attribution"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE: While the shader is optimized, it still equates to real-time lighting - so use sparingly, and read the ",(0,i.kt)("a",{parentName:"strong",href:"https://github.com/pimaker/ltcgi/wiki"},"Wiki")," on performance optimization!")),(0,i.kt)("p",null,"Join the Discord for support or other questions: ",(0,i.kt)("a",{parentName:"p",href:"https://discord.gg/r38vJd2DuJ"},"https://discord.gg/r38vJd2DuJ")))}u.isMDXComponent=!0}}]);