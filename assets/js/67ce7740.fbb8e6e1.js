"use strict";(self.webpackChunkltcgi=self.webpackChunkltcgi||[]).push([[833],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(r),h=n,m=c["".concat(s,".").concat(h)]||c[h]||u[h]||o;return r?a.createElement(m,i(i({ref:t},d),{},{components:r})):a.createElement(m,i({ref:t},d))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5018:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:7},i="6\ufe0f\u20e3 Realtime Video",l={unversionedId:"Getting Started/Setup/Realtime_Video",id:"Getting Started/Setup/Realtime_Video",title:"6\ufe0f\u20e3 Realtime Video",description:'This section assumes that you have completed the previous ones and have a static quad set up, that successfully casts a single-colored light onto your scene. If not, please read the previous "Getting Started" entries. Follow the numbers! (\ud83d\udd22)',source:"@site/docs/Getting Started/Setup/Realtime_Video.md",sourceDirName:"Getting Started/Setup",slug:"/Getting Started/Setup/Realtime_Video",permalink:"/Getting Started/Setup/Realtime_Video",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"5\ufe0f\u20e3 The `LTCGI_Screen` component",permalink:"/Getting Started/Setup/LTCGI_Screen"},next:{title:"7\ufe0f\u20e3 Basic Toggle",permalink:"/Getting Started/Setup/Basic_Toggle"}},s={},p=[{value:"Video Player Adapters",id:"video-player-adapters",level:2},{value:"Manual Setup",id:"manual-setup",level:2}],d={toc:p};function u(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"6\ufe0f\u20e3-realtime-video"},"6\ufe0f\u20e3 Realtime Video"),(0,n.kt)("p",null,'This section assumes that you have completed the previous ones and have a static quad set up, that successfully casts a single-colored light onto your scene. If not, please read the previous "Getting Started" entries. Follow the numbers! (\ud83d\udd22)'),(0,n.kt)("p",null,"The main reason you probably want to use LTCGI for is to reflect realtime video. If you made it this far, the only thing stopping you now is getting the video into the LTCGI controller. There are 2 main ways of doing so:"),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"video-player-adapters"},"Video Player Adapters"),(0,n.kt)("p",null,"LTCGI comes with ready-made adapters for certain major VRChat video players. This option is only available for the VRChat version of LTCGI. To get started, download the right adapter for your video player from the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/PiMaker/ltcgi/releases"},"Releases")," tab."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Adapter Downloads",src:r(8726).Z,width:"922",height:"304"})),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ltcgi-adapter-protv.unitypackage")," - Adapter package for ",(0,n.kt)("a",{parentName:"p",href:"https://architechvr.gumroad.com/l/protv"},"ProTV video player"),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("inlineCode",{parentName:"p"},"ltcgi-adapter-usharp-video.unitypackage")," - Adapter package for ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/MerlinVR/USharpVideo"},"USharpVideo")),(0,n.kt)("p",null,"After importing the correct adapter package (",(0,n.kt)("em",{parentName:"p"},"after")," importing the corresponding video player!), your LTCGI Controller should detect any video players of the specified type automatically. Press the offered button to perform the automatic setup."),(0,n.kt)("p",null,"When the setup is done, you need to ensure that the Quad generated by LTCGI matches with your actual video screen position. To do so, you can enable its ",(0,n.kt)("inlineCode",{parentName:"p"},"Mesh Renderer")," component to see where it is in your scene. ",(0,n.kt)("strong",{parentName:"p"},"Make sure to disable the ",(0,n.kt)("inlineCode",{parentName:"strong"},"Mesh Renderer")," afterwards, if you do enable it!")),(0,n.kt)("p",null,"Do ",(0,n.kt)("em",{parentName:"p"},"not")," do anything else to either the video player, the LTCGI Controller or the LTCGI Screen component! ",(0,n.kt)("strong",{parentName:"p"},"All settings are configured automatically, and are ready to go!")," Upload your world to VRChat and test in-game to see if it worked."),(0,n.kt)("p",null,"Here's all that in video form:"),(0,n.kt)("video",{controls:!0,loop:!0,width:"100%"},(0,n.kt)("source",{src:"/vid/usharp_video_setup.webm"})),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"manual-setup"},"Manual Setup"),(0,n.kt)("p",null,"You do not need to use the provided adapters, e.g. if you are using a custom or unsupported video player, or are an advanced user that requires full control over what is being reflected."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Unity Video Player")),(0,n.kt)("p",null,'The built-in Unity Video Player supports Render Texture output. To use it, simply create a new Render Texture (set the size to whatever your video will be, e.g. 1920x1080) and put it into the "Target Texture" slot of your player component.'),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Unity Video Player setup",src:r(3458).Z,width:"418",height:"149"})),(0,n.kt)("p",null,'Then put your created Render Texture into the "Video Texture" slot on the LTCGI Controller, and display it on your screen by putting it as the main texture of either an "Unlit/Texture" or custom screen shader material.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"AVPro")),(0,n.kt)("p",null,"To use AVPro, you can use the included ",(0,n.kt)("inlineCode",{parentName:"p"},"LTCGI_AvProBlit_Material")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"LTCGI_BlitCRT")," in ",(0,n.kt)("inlineCode",{parentName:"p"},"_pi_/_LTCGI/Adapters")," (you do not need to include any adapter packages for these files to exist!)."),(0,n.kt)("p",null,'Increase the "Materials" array of your screen\'s mesh renderer to 2. Ignore the warning Unity will give you. As the first material, put AvProBlit, as the second your normal screen material. In your screen material, put the ',(0,n.kt)("inlineCode",{parentName:"p"},"BlitCRT"),' as the base texture. After doing this, your skybox in the editor may look a bit weird ("cut in half diagonally"), this is an editor-only bug and will work correctly in-game. :unity_rainbow:'),(0,n.kt)("p",null,"On The ",(0,n.kt)("inlineCode",{parentName:"p"},"AVPro Video Screen")," component, make sure that ",(0,n.kt)("strong",{parentName:"p"},'"Use Shared Material" is checked'),"!"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"AVPro Video Player setup",src:r(2690).Z,width:"415",height:"720"})),(0,n.kt)("p",null,"You can also do this via 2 seperate GameObjects (i.e. only have the ",(0,n.kt)("inlineCode",{parentName:"p"},"AvProBlit")," material on your AVPro screen component, and render the ",(0,n.kt)("inlineCode",{parentName:"p"},"BlitCRT")," elsewhere as your screen), which ",(0,n.kt)("em",{parentName:"p"},"may")," lead to better latency between the reflection and what is shown on screen. YMMV, and this is left as an exercise to the reader."))}u.isMDXComponent=!0},8726:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/adapter_downloads-271d14653eb468f2103027ad306ab042.jpg"},2690:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/ltcgi_video_player_avpro-d26193367051ab45e391e37a8b2a6347.jpg"},3458:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/ltcgi_video_player_unity-5310c0db70da1383b4ab818f1e5ccc2f.jpg"}}]);